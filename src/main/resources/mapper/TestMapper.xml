<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="api.mapper.TestMapper">
    <!-- 在select标签中编写查询的SQL语句，
设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复

使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果
集类型

resultType="api.entity.Customer"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!--
        根据id查询得到一个user对象
     -->
    <select id="getUser" parameterType="api.entity.Customer"
            resultType="api.entity.Customer">
        select * from user where id=#{id}
    </select>

    <select id="getUserList" parameterType="api.entity.Customer" resultType="api.entity.Customer">
        SELECT * FROM USER
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
            <if test="name != null and name != ''">
                AND name like #{name}
            </if>
            <if test="age != null and age != ''">
                AND age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                AND sex = #{sex}
            </if>
        </where>
        limit (#{pageNumber}-1)*#{pageSize},#{pageSize}
    </select>

    <!--<select id="getTotal" resultType="int">-->
        <!--select count("user.id") as count FROM USER-->
    <!--</select>-->

    <select id="getTotal" parameterType="api.entity.Customer" resultType="int">
        select count("user.id") as count FROM USER
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
            <if test="name != null and name != ''">
                AND name like concat('%', #{name}, '%')
            </if>
            <if test="age != null and age != ''">
                AND age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                AND sex = #{sex}
            </if>
        </where>
    </select>

</mapper>
